{"version":3,"file":"commands.js","mappings":"YAkCA,SAASA,EAASC,GAChBC,OAAOC,QAAQC,QAAQC,KAAKC,QAAQC,UAAS,SAACC,GAE5C,IACIC,EAAiBD,EAAOE,MADX,CAAC,QAAS,WAAY,sBAAuB,YAErDC,SAAQ,SAACV,GACZQ,EAAeG,WAAWX,KAC5BQ,EAAiBA,EAAeI,QAAQZ,EAAQ,IAAIa,OAExD,IACA,IAAMC,EAAa,GAAHC,OAAMf,EAAM,KAAAe,OAAIP,GAChCP,OAAOC,QAAQC,QAAQC,KAAKC,QAAQW,SAASF,EAC/C,GACF,CAxCAb,OAAOgB,SAAQ,WACb,IA8CFhB,OAAOiB,QAAQC,UAAU,UALzB,SAAgBC,GAEdA,EAAMC,WACR,IAGApB,OAAOiB,QAAQC,UAAU,eAzCzB,SAAqBC,GACnBrB,EAAS,SACTqB,EAAMC,WACR,IAuCApB,OAAOiB,QAAQC,UAAU,qBArCzB,SAA2BC,GACzBrB,EAAS,YACTqB,EAAMC,WACR,IAmCApB,OAAOiB,QAAQC,UAAU,wBAjCzB,SAA8BC,GAC5BrB,EAAS,uBACTqB,EAAMC,WACR,IA+BApB,OAAOiB,QAAQC,UAAU,aA7BzB,SAAmBC,GACjBrB,EAAS,YACTqB,EAAMC,WACR,G","sources":["webpack://office-addin-taskpane-js/./src/commands/commands.js"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n * See LICENSE in the project root for license information.\n */\n\n/* global Office */\n\nOffice.onReady(() => {\n  // If needed, Office.js is ready to be called.\n});\n/**\n * Shows a notification when the add-in command is executed.\n * @param event {Office.AddinCommands.Event}\n */\nfunction tagInfoOnly(event) {\n  tagEmail(\"[FYI]\");\n  event.completed();\n}\n\nfunction tagActionRequired(event) {\n  tagEmail(\"[ACTION]\");\n  event.completed();\n}\n\nfunction tagResponseRequested(event) {\n  tagEmail(\"[Response Required]\");\n  event.completed();\n}\n\nfunction tagUrgent(event) {\n  tagEmail(\"[URGENT]\");\n  event.completed(); // Ensure this is called regardless of success or failure\n}\n\nfunction tagEmail(prefix) {\n  Office.context.mailbox.item.subject.getAsync((result) => {\n    // We must first check that the currentSubject doesn't already contain a prefix, if it does, we need to exlude it and only apply the new prefix\n    const prefixes = [\"[FYI]\", \"[ACTION]\", \"[Response Required]\", \"[URGENT]\"];\n    let currentSubject = result.value;\n    prefixes.forEach((prefix) => {\n      if (currentSubject.startsWith(prefix)) {\n        currentSubject = currentSubject.replace(prefix, \"\").trim();\n      }\n    });\n    const newSubject = `${prefix} ${currentSubject}`;\n    Office.context.mailbox.item.subject.setAsync(newSubject);\n  });\n}\n\nfunction action(event) {\n  // Be sure to indicate when the add-in command function is complete\n  event.completed();\n}\n// Register the function with Office.\nOffice.actions.associate(\"action\", action);\nOffice.actions.associate(\"tagInfoOnly\", tagInfoOnly);\nOffice.actions.associate(\"tagActionRequired\", tagActionRequired);\nOffice.actions.associate(\"tagResponseRequested\", tagResponseRequested);\nOffice.actions.associate(\"tagUrgent\", tagUrgent);\n"],"names":["tagEmail","prefix","Office","context","mailbox","item","subject","getAsync","result","currentSubject","value","forEach","startsWith","replace","trim","newSubject","concat","setAsync","onReady","actions","associate","event","completed"],"sourceRoot":""}